<div class="container mx-auto">
  <div class="container mt-5">
    <div class="row">

      <div class="col-md-4">
        <div id="map"></div>
      </div>
      
      <div class="col-md-4">
          <h2><%= @road.title %></h2>
          <%= render 'road', {road: @road} %>
          <p>by <%= link_to "#{@road.user.name}", user_path(@road.user) %></p>
          <p><%= @road.created_at.strftime('%Y/%m/%d') %></p>
          <%= @road.description %>
          <div class="d-flex justify-content-between mx-3">
            <% if current_user.id == @road.user_id %>
              <p>
                <%= link_to "編集", edit_road_path(@road), class: "btn btn-outline-warning btn-sm" %>
                <%= link_to "削除", road_path(@road), class: "btn btn-danger btn-sm", method: :delete, data: { confirm: "削除しますか?" } %>
              </p>
            <% end %>
          </div>
      </div>
    </div>
  </div>

  <div class="container mt-5">
    <div id="roads" data-roads="<%= @roads.to_json %>"></div>
      <% if @road.road_images.attached? %>
        <div class="d-flex">
          <% @road.road_images.each do |image| %>
            <%= image_tag image, width: '35%', height: '35%' %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>

  <div class="container mt-5">
    <div class="row">
      <div class="col-sm-4">
        <h4>コメント一覧</h4>
          <% @comments.each do |c| %>
              <a href="/users/<%= @road.user.id %>"><%= c.user.name %>: </a>
              <%= c.content %>
              <hr>
          <% end %>
      </div>

      <div class="col-sm-4">
        <%= form_for [@road, @comment] do |f| %>
          <%= f.text_area :content, class: "comment-form" %>
          <br>
          <%= f.submit 'コメントする', class: "comment-btn btn btn-outline-warning" %>
        <% end %>
      </div>
    </div>
  </div>

  <div class="text-center mt-5">
    <p><%= link_to "投稿一覧へ", roads_path, class: "btn btn-outline-warning" %></p>
  </div>

</div>
<script>
let mapInstance
let geocoder
let marker

const savedLat = <%= @road.latitude %>
const savedLng = <%= @road.longitude %>

function initMap() {
  geocoder = new google.maps.Geocoder();
  // 保存された座標データが中心に来るように設定
  mapInstance = new google.maps.Map(document.getElementById('map'), {
    center: {lat: savedLat, lng: savedLng},
    zoom:13,
    mapTypeControl: false
  });

  // 保存された座標を使ってピンをさす
  pos = new google.maps.LatLng(
    savedLat,
    savedLng
  );
  default_marker = new google.maps.Marker({
    map: mapInstance,
    position: pos,
    icon: {
      url: ' https://maps.google.com/mapfiles/ms/icons/green-dot.png',
      scaledSize: new google.maps.Size(40, 40)
    }
  });
}


function codeAddress() {
  let inputAddress = document.getElementById('address').value;

  geocoder.geocode({
    'address': inputAddress
  }, function (results, status) {
    if (status == 'OK') {
      mapInstance.setCenter(results[0].geometry.location);

      if(marker != null){
        marker.setMap(null);
      }
      marker = null;

      marker = new google.maps.Marker({
        map: mapInstance,
        position: results[0].geometry.location
      });

      let title = document.getElementById('map_title');
      title.setAttribute("value", inputAddress);
    } else {
      alert('Geocode was not successful for the following reason: ' + status)
    }
  });
}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js" crossorigin="anonymous"></script>


