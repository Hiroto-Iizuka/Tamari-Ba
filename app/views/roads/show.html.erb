<h1>投稿詳細</h1>
<p>投稿者: <%= @road.user.name %></p>
<p>投稿日時: <%= @road.created_at %></p>
<%= @road.title %>
<div id="map"></div>

<p id="road-<%= @road.id %>">
  <% if @road.liked_by?(current_user) %>
    <%# 「いいね！」済み %>
    <%= render "like", post: @post %>
  <% else %>
    <%# 「いいね！」していない %>
    <%= render "dislike", post: @post %>
  <% end %>
</p>

<div id="roads" data-roads="<%= @roads.to_json %>"></div>
<% if @road.road_images.attached? %>
  <% @road.road_images.each do |image| %>
    <%= image_tag image, width: '35%', height: '35%' %>
  <% end %>
<% end %>
<br>
<%= @road.description %>

<% if current_user.id == @road.user_id %>
  <p>
    <%= link_to "編集", edit_road_path(@road) %>
    <%= link_to "削除", road_path(@road), method: :delete, data: { confirm: "削除しますか?" } %>
  </p>
<% end %>

<h2>コメント一覧</h2>
<% @comments.each do |c| %>
  <div>
    <a href="/users/<%= @road.user.id %>"><%= c.user.name %></a>
    <%= c.content %>
    <hr>
  </div>
<% end %>

<%= form_for [@road, @comment] do |f| %>
  <%= f.text_field :content %>
  <br>
  <%= f.submit 'コメントする' %>
<% end %>

<p><%= link_to "投稿一覧へ", roads_path %></p>

<script>
let mapInstance
let geocoder
let marker

const savedLat = <%= @road.latitude %>
const savedLng = <%= @road.longitude %>

function initMap() {
  geocoder = new google.maps.Geocoder();
  // 保存された座標データが中心に来るように設定
  mapInstance = new google.maps.Map(document.getElementById('map'), {
    center: {lat: savedLat, lng: savedLng},
    zoom:13,
    mapTypeControl: false
  });

  // 保存された座標を使ってピンをさす
  pos = new google.maps.LatLng(
    savedLat,
    savedLng
  );
  default_marker = new google.maps.Marker({
    map: mapInstance,
    position: pos,
    icon: {
      url: ' https://maps.google.com/mapfiles/ms/icons/green-dot.png',
      scaledSize: new google.maps.Size(40, 40)
    }
  });
}

// 
function codeAddress() {
  let inputAddress = document.getElementById('address').value;

  geocoder.geocode({
    'address': inputAddress
  }, function (results, status) {
    if (status == 'OK') {
      mapInstance.setCenter(results[0].geometry.location);

      if(marker != null){
        marker.setMap(null);
      }
      marker = null;

      marker = new google.maps.Marker({
        map: mapInstance,
        position: results[0].geometry.location
      });

      let title = document.getElementById('map_title');
      title.setAttribute("value", inputAddress);
    } else {
      alert('Geocode was not successful for the following reason: ' + status)
    }
  });
}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js" crossorigin="anonymous"></script>

<style>
#map {
  height: 450px;
  width: 450px;
}
</style>
