<div class="container py-5 mx-auto">
  <h3 class="text-center">編集</h3>

  <div class="search text-center mt-3">
    <input id="address" class="area-search" type="textbox" placeholder="検索してマップを移動できます">
    <input class="mx-auto" type="button" value="検索" onclick="searchArea()">
  </div>


  <p class="text-center mt-5">マーカーを更新したい場合は設置したい場所をクリックしてください。</p>
  <div id="map" class="mx-auto mt-3"></div>

  <%= form_with model: @road, local: true do |f| %>
    <div class="d-flex mt-3">
      <p class="mx-auto">
        緯度: <%=f.text_field :latitude, class: "latlng-field mx-auto" %>
        経度: <%=f.text_field :longitude, class: "latlng-field mx-auto" %>
      </p>
    </div>

      <% if @road.road_images.present? %>
        <p class="text-center">現在投稿されている画像(削除するものはチェックしてください)</p>
        <% @road.road_images.each do |image| %>
        <p class="d-flex justify-content-center">
          <%= f.check_box :road_image_ids, {multiple: true}, image.id, false %>
          <%= image_tag image, width: '300px', height: '200px' %>
        </p>
        <% end %>
      <% end %>
    
      <div class="text-center">
        <%= f.label :title, "タイトル" %>
        <div class="text-center">
          <p><%= f.text_field :title, class: "title-field" %></p>
        </div>
        <%= f.label :description, "説明文" %>
        <p><%= f.text_area :description, class: "description-field" %></p>
        <%= f.submit '更新する', class: "btn btn-outline-primary submit-btn" %>
      </div>

  <% end %>
</div>


<script>

let mapInstance
let geocoder
let marker

const savedLat = <%= @road.latitude %>
const savedLng = <%= @road.longitude %>

function initMap() {
  geocoder = new google.maps.Geocoder();
  // 保存された座標データが中心に来るように設定
  mapInstance = new google.maps.Map(document.getElementById('map'), {
    center: {lat: savedLat, lng: savedLng},
    zoom:13,
    mapTypeControl: false
  });

  // 保存された座標を使ってピンをさす
  pos = new google.maps.LatLng(
    savedLat,
    savedLng
  );
  default_marker = new google.maps.Marker({
    map: mapInstance,
    position: pos,
    icon: {
      url: ' https://maps.google.com/mapfiles/ms/icons/green-dot.png',
      scaledSize: new google.maps.Size(40, 40)
    }
  });

    // クリックしたときに関数を実行
  mapInstance.addListener('click', function(e) {
    deleteMarker();
    getClickLatLng(e.latLng, mapInstance);
    });
  }


// 住所、座標を取得
function getClickLatLng(latlng, mapInstance) {
  document.getElementById('road_latitude').value = latlng.lat();
  document.getElementById('road_longitude').value = latlng.lng();

  marker = new google.maps.Marker({
    position: latlng,
    map: mapInstance
  });

  mapInstance.panTo(latlng);
}

// 既にあるマーカーの削除
function deleteMarker() {
  if(marker != null){
    marker.setMap(null);
  }
  marker = null;
}


function searchArea() {
  // 検索フォームの入力内容を取得
  let inputAddress = document.getElementById('address').value;

  geocoder.geocode( { 'address': inputAddress }, function(results, status) {
    // 該当する検索結果がヒットした時に、地図の中心を検索結果の緯度経度に更新
    if (status == 'OK') {
      mapInstance.setCenter(results[0].geometry.location);
    } else {
      // 検索結果がなかった場合に表示
      alert('該当する結果がありませんでした:' + status);
    }
  }); 
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>

<style>
#map {
  height: 600px;
  width: 600px;
}
</style>